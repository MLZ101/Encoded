{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\react-frontend\\\\my-app\\\\frontend\\\\src\\\\context&hook\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setUser({\n        token\n      });\n      console.log(\"USER: \", user);\n    }\n  }, [user]);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5119/api/Auth/login\", {\n        email,\n        passwordHash: password\n      });\n      const token = response.data.token;\n      localStorage.setItem(\"token\", token);\n      setUser({\n        token\n      });\n      console.log(\"the beatinggggggggg ull receive\", user);\n      return response.data.message;\n    } catch (err) {\n      throw new Error(\"Login failed\");\n    }\n  };\n  const register = async (email, password, username) => {\n    try {\n      const response = await axios.post(\"http://localhost:5119/api/Auth/register\", {\n        email,\n        passwordHash: password,\n        username\n      });\n      return response.data;\n    } catch (err) {\n      throw new Error(\"Registration failed\");\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","console","log","login","email","password","response","post","passwordHash","data","setItem","message","err","Error","register","username","logout","removeItem","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/react-frontend/my-app/frontend/src/context&hook/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      setUser({ token });\r\n      console.log(\"USER: \", user);\r\n    }\r\n  }, [user]);\r\n\r\n  \r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5119/api/Auth/login\", {\r\n        email,\r\n        passwordHash: password,\r\n      });\r\n      const token = response.data.token;\r\n      localStorage.setItem(\"token\", token);\r\n      setUser({ token });\r\n      console.log(\"the beatinggggggggg ull receive\",user);\r\n      return response.data.message;\r\n    } catch (err) {\r\n      throw new Error(\"Login failed\");\r\n    }\r\n  };\r\n\r\n  const register = async (email, password, username) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5119/api/Auth/register\", {\r\n        email,\r\n        passwordHash: password,\r\n        username,\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw new Error(\"Registration failed\");\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthProvider, AuthContext };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,OAAO,CAAC;QAAEC;MAAM,CAAC,CAAC;MAClBG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,IAAI,CAAC;IAC7B;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAIV,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,sCAAsC,EAAE;QACxEH,KAAK;QACLI,YAAY,EAAEH;MAChB,CAAC,CAAC;MACF,MAAMP,KAAK,GAAGQ,QAAQ,CAACG,IAAI,CAACX,KAAK;MACjCC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;MACpCD,OAAO,CAAC;QAAEC;MAAM,CAAC,CAAC;MAClBG,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAACN,IAAI,CAAC;MACnD,OAAOU,QAAQ,CAACG,IAAI,CAACE,OAAO;IAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOV,KAAK,EAAEC,QAAQ,EAAEU,QAAQ,KAAK;IACpD,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,yCAAyC,EAAE;QAC3EH,KAAK;QACLI,YAAY,EAAEH,QAAQ;QACtBU;MACF,CAAC,CAAC;MACF,OAAOT,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBjB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;IAChCpB,OAAO,CAAC,IAAI,CAAC;IACbqB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC;EAED,oBACE7B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEO,KAAK;MAAEW,QAAQ;MAAEE;IAAO,CAAE;IAAAtB,QAAA,EAC5DA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CArDIF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAuDlB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}